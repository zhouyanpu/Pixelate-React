{"version":3,"sources":["logo.svg","components/headBar.jsx","components/cell.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Headbar","state","react_default","a","createElement","className","class","onClick","this","props","morerow","lessrow","morecol","lesscol","toclean","onChange","colorchange","id","value","Component","Cell","genclass","_this","core","num","_this2","clicked","onMouseEnter","enter","onMouseLeave","leave","App","rows","cols","cells","key","colorOn","genkey","handleMorerow","_callee","newr","i","regenerator_default","wrap","_context","prev","next","length","console","log","setState","pre","push","stop","handleLessrow","_callee2","_context2","pop","handleMorecol","_callee3","_context3","handleLesscol","_callee4","_context4","colorChange","_callee5","ev","_context5","target","handleClick","_callee6","r","c","_context6","handleClean","handleEnter","_callee7","_context7","handleLeave","_callee8","_context8","components_headBar","map","components_cell","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c742d716.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport \"./headBar.css\";\r\n\r\nclass Headbar extends Component {\r\n  state = {};\r\n\r\n  //   handle = ev => {\r\n  //     alert(ev.target.value);\r\n  //   };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wholebar\">\r\n        <h1>Pixelate</h1>\r\n        <div class=\"btns\">\r\n          <button onClick={this.props.morerow}> More Row </button>\r\n          <button onClick={this.props.lessrow}>Less Row</button>\r\n          <button onClick={this.props.morecol}>More Column</button>\r\n          <button onClick={this.props.lesscol}>Less Column</button>\r\n          <button onClick={this.props.toclean}>To Clean</button>\r\n          <button>Uniform Color</button>\r\n          <button>Replenish</button>\r\n          <select onChange={this.props.colorchange} id=\"colordrop\">\r\n            <option value=\"0\" id=\"red\">\r\n              red\r\n            </option>\r\n            <option value=\"1\" id=\"bla\">\r\n              black\r\n            </option>\r\n            <option value=\"2\" id=\"blu\">\r\n              blue\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Headbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./cell.css\";\r\n\r\nclass Cell extends Component {\r\n  state = {};\r\n\r\n  genclass = () => {\r\n    if (this.props.core.num == -1) return \"cellbody \";\r\n    //+ \"blue\"\r\n    else if (this.props.core.num == 0) {\r\n      return \"cellbody \" + \"red\";\r\n    } else if (this.props.core.num == 1) {\r\n      return \"cellbody \" + \"black\";\r\n    } else if (this.props.core.num == 2) {\r\n      return \"cellbody \" + \"blue\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <td\r\n        className={this.genclass()}\r\n        onClick={() => this.props.clicked(this.props.core)}\r\n        // onMouseOver={() => this.props.enter(this.props.core)}\r\n        onMouseEnter={() => this.props.enter(this.props.core)} //括号格式???\r\n        onMouseLeave={() => this.props.leave(this.props.core)}\r\n      />\r\n    ); //不要括号为什么不行??\r\n    // {this.props.color}\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { headBar } from \"./components\";\nimport Headbar from \"./components/headBar\";\nimport { async } from \"q\";\nimport Cell from \"./components/cell\";\n\nclass App extends Component {\n  state = { rows: 0, cols: 0, cells: [], key: 665, colorOn: 0 };\n\n  genkey = () => {\n    this.state.key++;\n    return this.state.key;\n  };\n\n  handleMorerow = async () => {\n    if (this.state.cells.length == 0) {\n      console.log(\"length=0\");\n      await this.setState({\n        cells: [[{ num: -1, pre: -1, id: this.genkey() }]]\n      });\n    }\n    // let qq = this.state.cells.map(ea => (ea = 8));\n    // console.log(qq);\n    else {\n      let newr = [];\n      for (let i = 0; i < this.state.cells[0].length; i++)\n        newr.push({ num: -1, pre: -1, id: this.genkey() });\n      this.state.cells.push(newr); // 能先改再空setstate吗\n      await this.setState({ cells: this.state.cells });\n      console.log(this.state.cells);\n    }\n  };\n  handleLessrow = async () => {\n    if (this.state.cells.length) {\n      this.state.cells.pop();\n      await this.setState({ cells: this.state.cells });\n      console.log(this.state.cells);\n    }\n  };\n  handleMorecol = async () => {\n    if (this.state.cells.length == 0)\n      await this.setState({\n        cells: [[{ num: -1, pre: -1, id: this.genkey() }]]\n      });\n    else {\n      for (let i = 0; i < this.state.cells.length; i++) {\n        this.state.cells[i].push({ num: -1, pre: -1, id: this.genkey() });\n      }\n      await this.setState({ cells: this.state.cells });\n      console.log(this.state.cells);\n    }\n  };\n  handleLesscol = async () => {\n    if (this.state.cells.length) {\n      if (this.state.cells[0].length) {\n        if (this.state.cells[0].length == 1) {\n          await this.setState({ cells: [] });\n          console.log(this.state.cells);\n        } else {\n          for (let i = 0; i < this.state.cells.length; i++) {\n            this.state.cells[i].pop();\n          }\n          await this.setState({ cells: this.state.cells });\n          console.log(this.state.cells);\n        }\n      }\n    }\n  };\n  colorChange = async ev => {\n    await this.setState({ colorOn: ev.target.value });\n    // alert(this.state.colorOn);\n  };\n  handleClick = async core => {\n    console.log(core);\n    for (let r = 0; r < this.state.cells.length; r++) {\n      for (let c = 0; c < this.state.cells[r].length; c++) {\n        if (this.state.cells[r][c] === core) {\n          // this.state.cells[r][c].num = this.state.colorOn;\n          this.state.cells[r][c].pre = this.state.cells[r][c].num;\n        }\n      }\n    }\n    await this.setState({ cells: this.state.cells });\n  };\n  handleClean = () => {\n    for (let r = 0; r < this.state.cells.length; r++) {\n      for (let c = 0; c < this.state.cells[r].length; c++) {\n        this.state.cells[r][c].num = -1;\n        this.state.cells[r][c].pre = -1;\n      }\n    }\n    this.setState({ cells: this.state.cells });\n  };\n  handleEnter = async core => {\n    console.log(core);\n    for (let r = 0; r < this.state.cells.length; r++) {\n      for (let c = 0; c < this.state.cells[r].length; c++) {\n        if (this.state.cells[r][c] == core)\n          this.state.cells[r][c].num = this.state.colorOn;\n      }\n    }\n    this.setState({ cells: this.state.cells });\n  };\n  handleLeave = async core => {\n    console.log(\"leave!!!\");\n    for (let r = 0; r < this.state.cells.length; r++) {\n      for (let c = 0; c < this.state.cells[r].length; c++) {\n        this.state.cells[r][c].num = this.state.cells[r][c].pre;\n      }\n    }\n    this.setState({ cells: this.state.cells });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Headbar\n          morerow={this.handleMorerow}\n          lessrow={this.handleLessrow}\n          morecol={this.handleMorecol}\n          lesscol={this.handleLesscol}\n          colorchange={this.colorChange}\n          toclean={this.handleClean}\n        />\n        <table className=\"displaybox\">\n          <tbody>\n            {this.state.cells.map(r => (\n              <tr key={this.genkey()}>\n                {r.map(core => (\n                  <Cell\n                    key={core.id}\n                    core={core}\n                    clicked={this.handleClick}\n                    enter={this.handleEnter}\n                    leave={this.handleLeave}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}